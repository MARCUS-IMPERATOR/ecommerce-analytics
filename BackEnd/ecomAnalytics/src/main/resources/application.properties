spring.application.name=ecomAnalytics

# Flyway
spring.flyway.url=jdbc:postgresql://localhost:5432/ecom_analytics
spring.flyway.user=postgres
spring.flyway.password=123
spring.flyway.enabled= true
spring.flyway.baseline-on-migrate= true
spring.flyway.locations=classpath:db/migration
spring.flyway.table=flyway_schema_history
spring.flyway.baseline-version=0
spring.flyway.validate-on-migrate=true
spring.flyway.clean-disabled=true
logging.level.org.flywaydb=INFO
logging.level.org.flywaydb.core=DEBUG
logging.level.org.flywaydb.core.internal=DEBUG
logging.level.org.flywaydb.core.command=DEBUG
logging.level.org.flywaydb.core.migration=DEBUG
logging.level.org.flywaydb.core.database=DEBUG
logging.level.org.flywaydb.core.configuration=DEBUG

# Database
spring.datasource.url= jdbc:postgresql://localhost:5432/ecom_analytics
spring.datasource.username= postgres
spring.datasource.password= 123

# JPA
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql= true

# Data Generation
data-generation.enabled=false

data-generation.customers.count=1000
data-generation.customers.geog-dist.morocco-perc=15
data-generation.customers.geog-dist.france-perc=35
data-generation.customers.geog-dist.usa-perc=25
data-generation.customers.geog-dist.canada-perc=10
data-generation.customers.geog-dist.other-perc=15

data-generation.products.count=300
data-generation.products.category-distribution.smartphones=50
data-generation.products.category-distribution.laptops=50
data-generation.products.category-distribution.tablets=50
data-generation.products.category-distribution.gaming=50
data-generation.products.category-distribution.accessories=50
data-generation.products.category-distribution.others=50

data-generation.orders.months=48
data-generation.orders.daily-volume=5

# Redis
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=2000ms
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000ms
management.metrics.enable.redis= true

# Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=1
spring.kafka.producer.retries=1
spring.kafka.consumer.group-id=ml-service
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.sqli.ecomAnalytics.events
spring.kafka.consumer.properties.spring.json.value.default.type=com.sqli.ecomAnalytics.dto.ForecastResponse

#Actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.prometheus.metrics.export.enabled=true
management.tracing.sampling.probability=1.0
management.health.defaults.enabled=true

management.endpoints.web.base-path=/actuator
management.server.port=8080
management.endpoints.access.default=unrestricted

#log
logging.level.org.apache.kafka=INFO
logging.level.org.springframework.kafka=INFO